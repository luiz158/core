ident(This)operator(?)ident(is)operator(+)ident(no)operator(:)ident(label)operator(;)

comment(// This is only one label:)
label(label:) keyword(switch) operator(()ident(TYPE)operator(()ident(v)operator(\)\)) operator({)
  keyword(case) ident(T_CLASS)operator(:) keyword(case) ident(T_MODULE)operator(:)
    ident(rb_str_append)operator(()ident(s)operator(,) ident(rb_inspect)operator(()ident(v)operator(\)\);)
    keyword(break)operator(;)
  keyword(default)operator(:)
    ident(rb_str_append)operator(()ident(s)operator(,) ident(rb_any_to_s)operator(()ident(v)operator(\)\);)
    keyword(break)operator(;)
operator(})
comment(// These are two labels.)
ident(function)operator(()ident(call)operator(\);)
label(label2:) label(label3:) ident(a) operator(=) ident(b) operator(+) ident(c)operator(;)

comment(// Another label.)
keyword(if) operator(()integer(1)operator(\)) operator({)
  label(label4:) ident(a) operator(=) ident(b) operator(+) ident(c)operator(;)
operator(})

comment(// Not a label.)
ident(test)operator(()
  ident(a)operator(?)
  ident(b)operator(:)
  ident(c)
operator(\))