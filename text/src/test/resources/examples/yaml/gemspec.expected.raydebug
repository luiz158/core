head<head(---)> type(!ruby/object)operator(:)class(Gem::Specification) 
key(name)operator(:) string<content(coderay)>
key(version)operator(:) type(!ruby/object)operator(:)class(Gem::Version) 
  key(version)operator(:) string<content(0.7.9.257)>
key(platform)operator(:) string<content(ruby)>
key(authors)operator(:) 
operator(-) string<content(murphy)>
key(autorequire)operator(:) string<content(coderay)>
key(bindir)operator(:) string<content(bin)>
key(cert_chain)operator(:) string<content([])>

key(date)operator(:) string<content(2008-09-24 00:00:00 +02:00)>
key(default_executable)operator(:) 
key(dependencies)operator(:) string<content([])>

key(description)operator(:) string<delimiter(")content(CodeRay is a Ruby library for syntax highlighting. I try to make CodeRay easy to use and intuitive, but at the same time fully featured, complete, fast and efficient.  Usage is simple: require 'coderay' code = 'some %q(weird (Ruby\) can't shock\) me!' puts CodeRay.scan(code, :ruby\).html)delimiter(")>
key(email)operator(:) string<content(murphy@cYcnus.de)>
key(executables)operator(:) 
operator(-) string<content(coderay)>
operator(-) string<content(coderay_stylesheet)>
key(extensions)operator(:) string<content([])>

key(extra_rdoc_files)operator(:) 
operator(-) string<content(./README)>
operator(-) string<content(./FOLDERS)>
key(files)operator(:) 
operator(-) string<content(./lib/coderay/duo.rb)>
operator(-) string<content(./lib/coderay/encoder.rb)>
operator(-) string<content(./lib/coderay/encoders/_map.rb)>
operator(-) string<content(./lib/coderay/encoders/count.rb)>
operator(-) string<content(./lib/coderay/encoders/debug.rb)>
operator(-) string<content(./lib/coderay/encoders/div.rb)>
operator(-) string<content(./lib/coderay/encoders/html/css.rb)>
operator(-) string<content(./lib/coderay/encoders/html/numerization.rb)>
operator(-) string<content(./lib/coderay/encoders/html/output.rb)>
operator(-) string<content(./lib/coderay/encoders/html.rb)>
operator(-) string<content(./lib/coderay/encoders/null.rb)>
operator(-) string<content(./lib/coderay/encoders/page.rb)>
operator(-) string<content(./lib/coderay/encoders/span.rb)>
operator(-) string<content(./lib/coderay/encoders/statistic.rb)>
operator(-) string<content(./lib/coderay/encoders/text.rb)>
operator(-) string<content(./lib/coderay/encoders/tokens.rb)>
operator(-) string<content(./lib/coderay/encoders/xml.rb)>
operator(-) string<content(./lib/coderay/encoders/yaml.rb)>
operator(-) string<content(./lib/coderay/for_redcloth.rb)>
operator(-) string<content(./lib/coderay/helpers/file_type.rb)>
operator(-) string<content(./lib/coderay/helpers/gzip_simple.rb)>
operator(-) string<content(./lib/coderay/helpers/plugin.rb)>
operator(-) string<content(./lib/coderay/helpers/word_list.rb)>
operator(-) string<content(./lib/coderay/scanner.rb)>
operator(-) string<content(./lib/coderay/scanners/_map.rb)>
operator(-) string<content(./lib/coderay/scanners/c.rb)>
operator(-) string<content(./lib/coderay/scanners/css.rb)>
operator(-) string<content(./lib/coderay/scanners/debug.rb)>
operator(-) string<content(./lib/coderay/scanners/delphi.rb)>
operator(-) string<content(./lib/coderay/scanners/html.rb)>
operator(-) string<content(./lib/coderay/scanners/java/builtin_types.rb)>
operator(-) string<content(./lib/coderay/scanners/java.rb)>
operator(-) string<content(./lib/coderay/scanners/java_script.rb)>
operator(-) string<content(./lib/coderay/scanners/nitro_xhtml.rb)>
operator(-) string<content(./lib/coderay/scanners/plaintext.rb)>
operator(-) string<content(./lib/coderay/scanners/rhtml.rb)>
operator(-) string<content(./lib/coderay/scanners/ruby/patterns.rb)>
operator(-) string<content(./lib/coderay/scanners/ruby.rb)>
operator(-) string<content(./lib/coderay/scanners/scheme.rb)>
operator(-) string<content(./lib/coderay/scanners/xml.rb)>
operator(-) string<content(./lib/coderay/style.rb)>
operator(-) string<content(./lib/coderay/styles/_map.rb)>
operator(-) string<content(./lib/coderay/styles/cycnus.rb)>
operator(-) string<content(./lib/coderay/styles/murphy.rb)>
operator(-) string<content(./lib/coderay/token_classes.rb)>
operator(-) string<content(./lib/coderay/tokens.rb)>
operator(-) string<content(./lib/coderay.rb)>
operator(-) string<content(./lib/term/ansicolor.rb)>
operator(-) string<content(./README)>
operator(-) string<content(./LICENSE)>
operator(-) string<content(./FOLDERS)>
operator(-) string<content(bin/coderay)>
operator(-) string<content(bin/coderay_stylesheet)>
key(has_rdoc)operator(:) string<content(true)>
key(homepage)operator(:) string<content(http://coderay.rubychan.de)>
key(post_install_message)operator(:) 
key(rdoc_options)operator(:) 
operator(-) string<content(-SNw2)>
operator(-) string<content(-mREADME)>
operator(-) string<content(-a)>
operator(-) string<content(-t CodeRay Documentation)>
key(require_paths)operator(:) 
operator(-) string<content(lib)>
key(required_ruby_version)operator(:) type(!ruby/object)operator(:)class(Gem::Requirement) 
  key(requirements)operator(:) 
  operator(-) string<content(- ">=")>
    operator(-) type(!ruby/object)operator(:)class(Gem::Version) 
      key(version)operator(:) string<content(1.8.2)>
  key(version)operator(:) 
key(required_rubygems_version)operator(:) type(!ruby/object)operator(:)class(Gem::Requirement) 
  key(requirements)operator(:) 
  operator(-) string<content(- ">=")>
    operator(-) type(!ruby/object)operator(:)class(Gem::Version) 
      key(version)operator(:) string<delimiter(")content(0)delimiter(")>
  key(version)operator(:) 
key(requirements)operator(:) 
operator(-) string<content(strscan)>
key(rubyforge_project)operator(:) string<content(coderay)>
key(rubygems_version)operator(:) string<content(1.3.0)>
key(signing_key)operator(:) 
key(specification_version)operator(:) string<content(2)>
key(summary)operator(:) string<content(CodeRay is a fast syntax highlighter engine for many languages.)>
key(test_files)operator(:) string<content([])>


