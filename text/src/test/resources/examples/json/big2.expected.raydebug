operator({)
  key<delimiter(")content(url)delimiter(")>operator(:) string<delimiter(")content(http:)char(\\/)char(\\/)content(localhost:3000)char(\\/)content(elements)char(\\/)content(633)char(\\/)content(attributes)delimiter(")>operator(,)
  key<delimiter(")content(name)delimiter(")>operator(:) string<delimiter(")content(Bestellung: 3 <strong>Clovis Schwenger<)char(\\/)content(strong> ()char(\\u20ac)content( 12.10, 2008-10-08\))delimiter(")>operator(,)
  key<delimiter(")content(attributes)delimiter(")>operator(:) operator([)
    operator({)
      key<delimiter(")content(color)delimiter(")>operator(:) string<delimiter(")content(red)delimiter(")>operator(,)
      key<delimiter(")content(type)delimiter(")>operator(:) string<delimiter(")content(state)delimiter(")>operator(,)
      key<delimiter(")content(uri)delimiter(")>operator(:) string<delimiter(")content(http:)char(\\/)char(\\/)content(localhost:3000)char(\\/)content(elements)char(\\/)content(633)char(\\/)content(state)delimiter(")>operator(,)
      key<delimiter(")content(options)delimiter(")>operator(:) operator([)
        operator({)
          key<delimiter(")content(color)delimiter(")>operator(:) string<delimiter(")content(red)delimiter(")>operator(,)
          key<delimiter(")content(name)delimiter(")>operator(:) string<delimiter(")content(neu)delimiter(")>operator(,)
          key<delimiter(")content(id)delimiter(")>operator(:) string<delimiter(")content(new)delimiter(")>
        operator(})operator(,)
        operator({)
          key<delimiter(")content(color)delimiter(")>operator(:) string<delimiter(")content(orange)delimiter(")>operator(,)
          key<delimiter(")content(name)delimiter(")>operator(:) string<delimiter(")content(abgeschlossen)delimiter(")>operator(,)
          key<delimiter(")content(id)delimiter(")>operator(:) string<delimiter(")content(closed)delimiter(")>
        operator(})operator(,)
        operator({)
          key<delimiter(")content(color)delimiter(")>operator(:) string<delimiter(")content(green)delimiter(")>operator(,)
          key<delimiter(")content(name)delimiter(")>operator(:) string<delimiter(")content(freigegeben)delimiter(")>operator(,)
          key<delimiter(")content(id)delimiter(")>operator(:) string<delimiter(")content(approved)delimiter(")>
        operator(})operator(,)
        operator({)
          key<delimiter(")content(color)delimiter(")>operator(:) string<delimiter(")delimiter(")>operator(,)
          key<delimiter(")content(name)delimiter(")>operator(:) string<delimiter(")content(verschickt)delimiter(")>operator(,)
          key<delimiter(")content(id)delimiter(")>operator(:) string<delimiter(")content(shipped)delimiter(")>
        operator(})
      operator(])operator(,)
      key<delimiter(")content(name)delimiter(")>operator(:) string<delimiter(")content(Zustand)delimiter(")>operator(,)
      key<delimiter(")content(value)delimiter(")>operator(:) string<delimiter(")content(new)delimiter(")>operator(,)
      key<delimiter(")content(readable)delimiter(")>operator(:) value(true)operator(,)
      key<delimiter(")content(journals)delimiter(")>operator(:) operator([)
        operator({)
          key<delimiter(")content(user)delimiter(")>operator(:) string<delimiter(")content(CS)delimiter(")>operator(,)
          key<delimiter(")content(timestamp)delimiter(")>operator(:) string<delimiter(")content(17:05 10)char(\\/)content(07)char(\\/)content(08)delimiter(")>operator(,)
          key<delimiter(")content(created)delimiter(")>operator(:) value(true)
        operator(})
      operator(])operator(,)
      key<delimiter(")content(writable)delimiter(")>operator(:) value(false)
    operator(})operator(,)
    operator({)
      key<delimiter(")content(type)delimiter(")>operator(:) string<delimiter(")content(boolean)delimiter(")>operator(,)
      key<delimiter(")content(mandatory)delimiter(")>operator(:) value(false)operator(,)
      key<delimiter(")content(confirm)delimiter(")>operator(:) value(true)operator(,)
      key<delimiter(")content(uri)delimiter(")>operator(:) string<delimiter(")content(http:)char(\\/)char(\\/)content(localhost:3000)char(\\/)content(attributes)char(\\/)content(5217)delimiter(")>operator(,)
      key<delimiter(")content(value)delimiter(")>operator(:) value(false)operator(,)
      key<delimiter(")content(name)delimiter(")>operator(:) string<delimiter(")content(abgeschlossen)delimiter(")>operator(,)
      key<delimiter(")content(readable)delimiter(")>operator(:) value(true)operator(,)
      key<delimiter(")content(id)delimiter(")>operator(:) integer(5217)operator(,)
      key<delimiter(")content(writable)delimiter(")>operator(:) value(true)
    operator(})operator(,)
    operator({)
      key<delimiter(")content(type)delimiter(")>operator(:) string<delimiter(")content(boolean)delimiter(")>operator(,)
      key<delimiter(")content(mandatory)delimiter(")>operator(:) value(false)operator(,)
      key<delimiter(")content(confirm)delimiter(")>operator(:) value(true)operator(,)
      key<delimiter(")content(uri)delimiter(")>operator(:) string<delimiter(")content(http:)char(\\/)char(\\/)content(localhost:3000)char(\\/)content(attributes)char(\\/)content(5218)delimiter(")>operator(,)
      key<delimiter(")content(value)delimiter(")>operator(:) value(false)operator(,)
      key<delimiter(")content(name)delimiter(")>operator(:) string<delimiter(")content(freigegeben)delimiter(")>operator(,)
      key<delimiter(")content(readable)delimiter(")>operator(:) value(true)operator(,)
      key<delimiter(")content(id)delimiter(")>operator(:) integer(5218)operator(,)
      key<delimiter(")content(writable)delimiter(")>operator(:) value(false)
    operator(})operator(,)
    operator({)
      key<delimiter(")content(type)delimiter(")>operator(:) string<delimiter(")content(boolean)delimiter(")>operator(,)
      key<delimiter(")content(mandatory)delimiter(")>operator(:) value(false)operator(,)
      key<delimiter(")content(confirm)delimiter(")>operator(:) value(true)operator(,)
      key<delimiter(")content(uri)delimiter(")>operator(:) string<delimiter(")content(http:)char(\\/)char(\\/)content(localhost:3000)char(\\/)content(attributes)char(\\/)content(5219)delimiter(")>operator(,)
      key<delimiter(")content(value)delimiter(")>operator(:) value(false)operator(,)
      key<delimiter(")content(name)delimiter(")>operator(:) string<delimiter(")content(verschickt)delimiter(")>operator(,)
      key<delimiter(")content(readable)delimiter(")>operator(:) value(true)operator(,)
      key<delimiter(")content(id)delimiter(")>operator(:) integer(5219)operator(,)
      key<delimiter(")content(writable)delimiter(")>operator(:) value(false)
    operator(})operator(,)
    operator({)
      key<delimiter(")content(type)delimiter(")>operator(:) string<delimiter(")content(date)delimiter(")>operator(,)
      key<delimiter(")content(mandatory)delimiter(")>operator(:) value(true)operator(,)
      key<delimiter(")content(confirm)delimiter(")>operator(:) value(false)operator(,)
      key<delimiter(")content(uri)delimiter(")>operator(:) string<delimiter(")content(http:)char(\\/)char(\\/)content(localhost:3000)char(\\/)content(attributes)char(\\/)content(5220)delimiter(")>operator(,)
      key<delimiter(")content(value)delimiter(")>operator(:) string<delimiter(")content(2008-10-08)delimiter(")>operator(,)
      key<delimiter(")content(name)delimiter(")>operator(:) string<delimiter(")content(Bestelldatum)delimiter(")>operator(,)
      key<delimiter(")content(readable)delimiter(")>operator(:) value(true)operator(,)
      key<delimiter(")content(id)delimiter(")>operator(:) integer(5220)operator(,)
      key<delimiter(")content(writable)delimiter(")>operator(:) value(false)
    operator(})operator(,)
    operator({)
      key<delimiter(")content(type)delimiter(")>operator(:) string<delimiter(")content(references)delimiter(")>operator(,)
      key<delimiter(")content(create_options)delimiter(")>operator(:) operator([)
        operator({)
          key<delimiter(")content(create_element_url)delimiter(")>operator(:) string<delimiter(")content(http:)char(\\/)char(\\/)content(localhost:3000)char(\\/)content(elements?list=Lists%3A%3AEmployees&source_id=5221&type=Elements%3A%3APerson)delimiter(")>operator(,)
          key<delimiter(")content(essential_attributes)delimiter(")>operator(:) operator([)
          operator(])operator(,)
          key<delimiter(")content(names)delimiter(")>operator(:) operator({)
            key<delimiter(")content(type)delimiter(")>operator(:) string<delimiter(")content(Person)delimiter(")>operator(,)
            key<delimiter(")content(list)delimiter(")>operator(:) string<delimiter(")content(Mitarbeiter)delimiter(")>
          operator(})operator(,)
          key<delimiter(")content(ask_for_email)delimiter(")>operator(:) value(true)
        operator(})
      operator(])operator(,)
      key<delimiter(")content(maximum_reached)delimiter(")>operator(:) value(true)operator(,)
      key<delimiter(")content(constraints)delimiter(")>operator(:) operator({)
        key<delimiter(")content(neighbourhood)delimiter(")>operator(:) value(null)operator(,)
        key<delimiter(")content(attribute)delimiter(")>operator(:) value(null)operator(,)
        key<delimiter(")content(maximum)delimiter(")>operator(:) integer(1)operator(,)
        key<delimiter(")content(element)delimiter(")>operator(:) operator([)
          string<delimiter(")content(Elements::Person)delimiter(")>
        operator(])operator(,)
        key<delimiter(")content(list)delimiter(")>operator(:) value(null)operator(,)
        key<delimiter(")content(follow)delimiter(")>operator(:) value(null)
      operator(})operator(,)
      key<delimiter(")content(essential_attributes)delimiter(")>operator(:) operator([)
      operator(])operator(,)
      key<delimiter(")content(mandatory)delimiter(")>operator(:) value(false)operator(,)
      key<delimiter(")content(confirm)delimiter(")>operator(:) value(false)operator(,)
      key<delimiter(")content(uri)delimiter(")>operator(:) string<delimiter(")content(http:)char(\\/)char(\\/)content(localhost:3000)char(\\/)content(attributes)char(\\/)content(5221)delimiter(")>operator(,)
      key<delimiter(")content(value)delimiter(")>operator(:) operator({)
        key<delimiter(")content(elements)delimiter(")>operator(:) operator([)
          operator({)
            key<delimiter(")content(color)delimiter(")>operator(:) value(null)operator(,)
            key<delimiter(")content(type)delimiter(")>operator(:) string<delimiter(")content(Elements::Person)delimiter(")>operator(,)
            key<delimiter(")content(has_predecessors)delimiter(")>operator(:) value(false)operator(,)
            key<delimiter(")content(successors)delimiter(")>operator(:) string<delimiter(")content(http:)char(\\/)char(\\/)content(localhost:3000)char(\\/)content(elements)char(\\/)content(582)char(\\/)content(successors)delimiter(")>operator(,)
            key<delimiter(")content(uri)delimiter(")>operator(:) string<delimiter(")content(http:)char(\\/)char(\\/)content(localhost:3000)char(\\/)content(elements)char(\\/)content(582)delimiter(")>operator(,)
            key<delimiter(")content(name)delimiter(")>operator(:) string<delimiter(")content(Clovis Schwenger)delimiter(")>operator(,)
            key<delimiter(")content(attributes)delimiter(")>operator(:) string<delimiter(")content(http:)char(\\/)char(\\/)content(localhost:3000)char(\\/)content(elements)char(\\/)content(582)char(\\/)content(attributes)delimiter(")>operator(,)
            key<delimiter(")content(link_url)delimiter(")>operator(:) string<delimiter(")content(http:)char(\\/)char(\\/)content(localhost:3000)char(\\/)content(inbound_references)char(\\/)content(457)delimiter(")>operator(,)
            key<delimiter(")content(state)delimiter(")>operator(:) value(null)operator(,)
            key<delimiter(")content(readable)delimiter(")>operator(:) value(true)operator(,)
            key<delimiter(")content(list)delimiter(")>operator(:) string<delimiter(")content(Lists::Employees)delimiter(")>operator(,)
            key<delimiter(")content(id)delimiter(")>operator(:) integer(582)operator(,)
            key<delimiter(")content(writable)delimiter(")>operator(:) value(true)operator(,)
            key<delimiter(")content(family)delimiter(")>operator(:) string<delimiter(")content(http:)char(\\/)char(\\/)content(localhost:3000)char(\\/)content(elements)char(\\/)content(582)char(\\/)content(family)delimiter(")>
          operator(})
        operator(])
      operator(})operator(,)
      key<delimiter(")content(name)delimiter(")>operator(:) string<delimiter(")content(bestellt von)delimiter(")>operator(,)
      key<delimiter(")content(candidates_uri)delimiter(")>operator(:) string<delimiter(")content(http:)char(\\/)char(\\/)content(localhost:3000)char(\\/)content(attributes)char(\\/)content(5221)char(\\/)content(candidates)delimiter(")>operator(,)
      key<delimiter(")content(create_reference_uri)delimiter(")>operator(:) string<delimiter(")content(http:)char(\\/)char(\\/)content(localhost:3000)char(\\/)content(inbound_references)delimiter(")>operator(,)
      key<delimiter(")content(readable)delimiter(")>operator(:) value(true)operator(,)
      key<delimiter(")content(id)delimiter(")>operator(:) integer(5221)operator(,)
      key<delimiter(")content(writable)delimiter(")>operator(:) value(false)
    operator(})operator(,)
    operator({)
      key<delimiter(")content(type)delimiter(")>operator(:) string<delimiter(")content(text)delimiter(")>operator(,)
      key<delimiter(")content(mandatory)delimiter(")>operator(:) value(false)operator(,)
      key<delimiter(")content(confirm)delimiter(")>operator(:) value(false)operator(,)
      key<delimiter(")content(uri)delimiter(")>operator(:) string<delimiter(")content(http:)char(\\/)char(\\/)content(localhost:3000)char(\\/)content(attributes)char(\\/)content(5222)delimiter(")>operator(,)
      key<delimiter(")content(value)delimiter(")>operator(:) operator({)
        key<delimiter(")content(language)delimiter(")>operator(:) value(null)operator(,)
        key<delimiter(")content(version)delimiter(")>operator(:) integer(0)operator(,)
        key<delimiter(")content(text)delimiter(")>operator(:) string<delimiter(")delimiter(")>
      operator(})operator(,)
      key<delimiter(")content(name)delimiter(")>operator(:) string<delimiter(")content(Verwendungszweck)delimiter(")>operator(,)
      key<delimiter(")content(multiline)delimiter(")>operator(:) value(true)operator(,)
      key<delimiter(")content(readable)delimiter(")>operator(:) value(true)operator(,)
      key<delimiter(")content(id)delimiter(")>operator(:) integer(5222)operator(,)
      key<delimiter(")content(languages)delimiter(")>operator(:) operator([)
      operator(])operator(,)
      key<delimiter(")content(writable)delimiter(")>operator(:) value(true)
    operator(})operator(,)
    operator({)
      key<delimiter(")content(type)delimiter(")>operator(:) string<delimiter(")content(references)delimiter(")>operator(,)
      key<delimiter(")content(create_options)delimiter(")>operator(:) operator([)
      operator(])operator(,)
      key<delimiter(")content(maximum_reached)delimiter(")>operator(:) value(null)operator(,)
      key<delimiter(")content(constraints)delimiter(")>operator(:) operator({)
        key<delimiter(")content(neighbourhood)delimiter(")>operator(:) value(null)operator(,)
        key<delimiter(")content(attribute)delimiter(")>operator(:) value(null)operator(,)
        key<delimiter(")content(maximum)delimiter(")>operator(:) value(null)operator(,)
        key<delimiter(")content(element)delimiter(")>operator(:) operator([)
          string<delimiter(")content(Elements::Merchandise)delimiter(")>
        operator(])operator(,)
        key<delimiter(")content(list)delimiter(")>operator(:) value(null)operator(,)
        key<delimiter(")content(follow)delimiter(")>operator(:) string<delimiter(")content(Article)delimiter(")>
      operator(})operator(,)
      key<delimiter(")content(essential_attributes)delimiter(")>operator(:) operator([)
        operator({)
          key<delimiter(")content(name)delimiter(")>operator(:) string<delimiter(")content(Menge)delimiter(")>operator(,)
          key<delimiter(")content(default)delimiter(")>operator(:) integer(1)operator(,)
          key<delimiter(")content(id)delimiter(")>operator(:) string<delimiter(")content(Amount)delimiter(")>
        operator(})
      operator(])operator(,)
      key<delimiter(")content(mandatory)delimiter(")>operator(:) value(true)operator(,)
      key<delimiter(")content(confirm)delimiter(")>operator(:) value(false)operator(,)
      key<delimiter(")content(uri)delimiter(")>operator(:) string<delimiter(")content(http:)char(\\/)char(\\/)content(localhost:3000)char(\\/)content(attributes)char(\\/)content(5223)delimiter(")>operator(,)
      key<delimiter(")content(value)delimiter(")>operator(:) operator({)
        key<delimiter(")content(elements)delimiter(")>operator(:) operator([)
          operator({)
            key<delimiter(")content(color)delimiter(")>operator(:) value(null)operator(,)
            key<delimiter(")content(type)delimiter(")>operator(:) string<delimiter(")content(Elements::Merchandise)delimiter(")>operator(,)
            key<delimiter(")content(has_predecessors)delimiter(")>operator(:) value(true)operator(,)
            key<delimiter(")content(successors)delimiter(")>operator(:) string<delimiter(")content(http:)char(\\/)char(\\/)content(localhost:3000)char(\\/)content(elements)char(\\/)content(627)char(\\/)content(successors)delimiter(")>operator(,)
            key<delimiter(")content(uri)delimiter(")>operator(:) string<delimiter(")content(http:)char(\\/)char(\\/)content(localhost:3000)char(\\/)content(elements)char(\\/)content(627)delimiter(")>operator(,)
            key<delimiter(")content(name)delimiter(")>operator(:) string<delimiter(")content(8 x <div class=)char(\\")content(thumbnail)char(\\")content(><img src=)char(\\")content(http:)char(\\/)char(\\/)content(localhost:3000)char(\\/)content(files)char(\\/)content(875)char(\\/)content(thumbnail?attribute_id=5001)char(\\")content( )char(\\/)content(><)char(\\/)content(div>#005 Stressball)delimiter(")>operator(,)
            key<delimiter(")content(attributes)delimiter(")>operator(:) string<delimiter(")content(http:)char(\\/)char(\\/)content(localhost:3000)char(\\/)content(elements)char(\\/)content(627)char(\\/)content(attributes)delimiter(")>operator(,)
            key<delimiter(")content(link_url)delimiter(")>operator(:) string<delimiter(")content(http:)char(\\/)char(\\/)content(localhost:3000)char(\\/)content(inbound_references)char(\\/)content(458)delimiter(")>operator(,)
            key<delimiter(")content(state)delimiter(")>operator(:) value(null)operator(,)
            key<delimiter(")content(readable)delimiter(")>operator(:) value(true)operator(,)
            key<delimiter(")content(list)delimiter(")>operator(:) string<delimiter(")content(Lists::OrderItems)delimiter(")>operator(,)
            key<delimiter(")content(id)delimiter(")>operator(:) integer(627)operator(,)
            key<delimiter(")content(writable)delimiter(")>operator(:) value(true)operator(,)
            key<delimiter(")content(family)delimiter(")>operator(:) string<delimiter(")content(http:)char(\\/)char(\\/)content(localhost:3000)char(\\/)content(elements)char(\\/)content(627)char(\\/)content(family)delimiter(")>
          operator(})operator(,)
          operator({)
            key<delimiter(")content(color)delimiter(")>operator(:) value(null)operator(,)
            key<delimiter(")content(type)delimiter(")>operator(:) string<delimiter(")content(Elements::Merchandise)delimiter(")>operator(,)
            key<delimiter(")content(has_predecessors)delimiter(")>operator(:) value(true)operator(,)
            key<delimiter(")content(successors)delimiter(")>operator(:) string<delimiter(")content(http:)char(\\/)char(\\/)content(localhost:3000)char(\\/)content(elements)char(\\/)content(628)char(\\/)content(successors)delimiter(")>operator(,)
            key<delimiter(")content(uri)delimiter(")>operator(:) string<delimiter(")content(http:)char(\\/)char(\\/)content(localhost:3000)char(\\/)content(elements)char(\\/)content(628)delimiter(")>operator(,)
            key<delimiter(")content(name)delimiter(")>operator(:) string<delimiter(")content(3 x <div class=)char(\\")content(thumbnail)char(\\")content(><img src=)char(\\")content(http:)char(\\/)char(\\/)content(localhost:3000)char(\\/)content(files)char(\\/)content(881)char(\\/)content(thumbnail?attribute_id=5091)char(\\")content( )char(\\/)content(><)char(\\/)content(div>#011 Post-It Block)delimiter(")>operator(,)
            key<delimiter(")content(attributes)delimiter(")>operator(:) string<delimiter(")content(http:)char(\\/)char(\\/)content(localhost:3000)char(\\/)content(elements)char(\\/)content(628)char(\\/)content(attributes)delimiter(")>operator(,)
            key<delimiter(")content(link_url)delimiter(")>operator(:) string<delimiter(")content(http:)char(\\/)char(\\/)content(localhost:3000)char(\\/)content(inbound_references)char(\\/)content(459)delimiter(")>operator(,)
            key<delimiter(")content(state)delimiter(")>operator(:) value(null)operator(,)
            key<delimiter(")content(readable)delimiter(")>operator(:) value(true)operator(,)
            key<delimiter(")content(list)delimiter(")>operator(:) string<delimiter(")content(Lists::OrderItems)delimiter(")>operator(,)
            key<delimiter(")content(id)delimiter(")>operator(:) integer(628)operator(,)
            key<delimiter(")content(writable)delimiter(")>operator(:) value(true)operator(,)
            key<delimiter(")content(family)delimiter(")>operator(:) string<delimiter(")content(http:)char(\\/)char(\\/)content(localhost:3000)char(\\/)content(elements)char(\\/)content(628)char(\\/)content(family)delimiter(")>
          operator(})
        operator(])
      operator(})operator(,)
      key<delimiter(")content(name)delimiter(")>operator(:) string<delimiter(")content(Bestellpositionen)delimiter(")>operator(,)
      key<delimiter(")content(candidates_uri)delimiter(")>operator(:) string<delimiter(")content(http:)char(\\/)char(\\/)content(localhost:3000)char(\\/)content(attributes)char(\\/)content(5223)char(\\/)content(candidates)delimiter(")>operator(,)
      key<delimiter(")content(create_reference_uri)delimiter(")>operator(:) string<delimiter(")content(http:)char(\\/)char(\\/)content(localhost:3000)char(\\/)content(inbound_references)delimiter(")>operator(,)
      key<delimiter(")content(readable)delimiter(")>operator(:) value(true)operator(,)
      key<delimiter(")content(id)delimiter(")>operator(:) integer(5223)operator(,)
      key<delimiter(")content(writable)delimiter(")>operator(:) value(true)
    operator(})operator(,)
    operator({)
      key<delimiter(")content(type)delimiter(")>operator(:) string<delimiter(")content(float)delimiter(")>operator(,)
      key<delimiter(")content(mandatory)delimiter(")>operator(:) value(false)operator(,)
      key<delimiter(")content(confirm)delimiter(")>operator(:) value(false)operator(,)
      key<delimiter(")content(uri)delimiter(")>operator(:) string<delimiter(")content(http:)char(\\/)char(\\/)content(localhost:3000)char(\\/)content(attributes)char(\\/)content(5224)delimiter(")>operator(,)
      key<delimiter(")content(value)delimiter(")>operator(:) string<delimiter(")content(12,10)delimiter(")>operator(,)
      key<delimiter(")content(name)delimiter(")>operator(:) string<delimiter(")content(Summe)delimiter(")>operator(,)
      key<delimiter(")content(readable)delimiter(")>operator(:) value(true)operator(,)
      key<delimiter(")content(id)delimiter(")>operator(:) integer(5224)operator(,)
      key<delimiter(")content(writable)delimiter(")>operator(:) value(false)
    operator(})operator(,)
    operator({)
      key<delimiter(")content(type)delimiter(")>operator(:) string<delimiter(")content(document)delimiter(")>operator(,)
      key<delimiter(")content(files)delimiter(")>operator(:) operator([)
      operator(])operator(,)
      key<delimiter(")content(mandatory)delimiter(")>operator(:) value(false)operator(,)
      key<delimiter(")content(confirm)delimiter(")>operator(:) value(false)operator(,)
      key<delimiter(")content(uri)delimiter(")>operator(:) string<delimiter(")content(http:)char(\\/)char(\\/)content(localhost:3000)char(\\/)content(attributes)char(\\/)content(5225)delimiter(")>operator(,)
      key<delimiter(")content(name)delimiter(")>operator(:) string<delimiter(")content(Bestellschein)delimiter(")>operator(,)
      key<delimiter(")content(readable)delimiter(")>operator(:) value(true)operator(,)
      key<delimiter(")content(id)delimiter(")>operator(:) integer(5225)operator(,)
      key<delimiter(")content(writable)delimiter(")>operator(:) value(false)
    operator(})operator(,)
    operator({)
      key<delimiter(")content(type)delimiter(")>operator(:) string<delimiter(")content(document)delimiter(")>operator(,)
      key<delimiter(")content(files)delimiter(")>operator(:) operator([)
      operator(])operator(,)
      key<delimiter(")content(mandatory)delimiter(")>operator(:) value(false)operator(,)
      key<delimiter(")content(confirm)delimiter(")>operator(:) value(false)operator(,)
      key<delimiter(")content(uri)delimiter(")>operator(:) string<delimiter(")content(http:)char(\\/)char(\\/)content(localhost:3000)char(\\/)content(attributes)char(\\/)content(5226)delimiter(")>operator(,)
      key<delimiter(")content(name)delimiter(")>operator(:) string<delimiter(")content(Empf)char(\\u00e4)content(ngernachweis)delimiter(")>operator(,)
      key<delimiter(")content(readable)delimiter(")>operator(:) value(true)operator(,)
      key<delimiter(")content(id)delimiter(")>operator(:) integer(5226)operator(,)
      key<delimiter(")content(writable)delimiter(")>operator(:) value(false)
    operator(})
  operator(])operator(,)
  key<delimiter(")content(writable)delimiter(")>operator(:) value(true)
operator(})