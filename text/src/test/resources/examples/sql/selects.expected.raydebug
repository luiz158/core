comment(--RANDOM SQL QUERIES THAT DO NOTHING INTERESTING)
comment(--Copyright (C\) 2009 - Keith Pitt <keith@keithpitt.com>)

comment(--This program is free software: you can redistribute it and/or modify)
comment(--it under the terms of the GNU General Public License as published by)
comment(--the Free Software Foundation, either version 3 of the License, or)
comment(--(at your option\) any later version.)

comment(--This program is distributed in the hope that it will be useful,)
comment(--but WITHOUT ANY WARRANTY; without even the implied warranty of)
comment(--MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the)
comment(--GNU General Public License for more details.)

comment(--You should have received a copy of the GNU General Public License)
comment(--along with this program.  If not, see <http://www.gnu.org/licenses/>.)

class(SELECT) operator(*) keyword(FROM) ident(users)operator(;)

class(select) operator(*) keyword(from) ident(users)operator(;)

class(SELECT) string<delimiter(`)content(First Name)delimiter(`)>operator(,) string<delimiter(`)content(Last Name)delimiter(`)> keyword(FROM) string<delimiter(`)content(User Table)delimiter(`)>operator(;)

class(select) ident(first_name)operator(,) ident(last_name) keyword(FROM) ident(users)operator(;)

class(select) ident(first_name) operator(|)operator(|) string<delimiter(')content( )delimiter(')> operator(|)operator(|) ident(last_name) keyword(from) ident(users)operator(;)

class(select) ident(first_name) operator(|)operator(|) string<delimiter(")content( )delimiter(")> operator(|)operator(|) ident(last_name) keyword(from) ident(users)operator(;)

class(SELECT) operator(*) keyword(FROM) ident(users) keyword(JOIN) ident(companies) keyword(USING) operator(()ident(company_id)operator(\)) keyword(WHERE) ident(company_type) operator(=) string<delimiter(')content(Fortune 500)delimiter(')>operator(;)

class(SELECT) operator(*) keyword(FROM) ident(users) keyword(WHERE) ident(name_first) keyword(LIKE) string<delimiter(')content(%Keith%)delimiter(')>operator(;)

class(SELECT) keyword(CASE) keyword(WHEN) ident(foo)operator(.)ident(bar) operator(=) string<delimiter(')content(PY)delimiter(')>
   keyword(THEN) string<delimiter(')content(BAR)delimiter(')>
   keyword(ELSE) string<delimiter(')content(FOO)delimiter(')>
   keyword(END) keyword(as) ident(bar_type)operator(,)
   ident(user_id)operator(,)
   ident(company_id)operator(,)
   predefined(sum)operator(()
      keyword(case) keyword(when) ident(foo)operator(.)ident(bar) operator(=) string<delimiter(')content(PY)delimiter(')>
      keyword(then) operator(-)ident(amt) keyword(else) ident(amt)
   keyword(end)
   operator(\)) keyword(over) operator(()keyword(order) keyword(by) ident(id)operator(,) ident(amt)operator(\)) keyword(as) ident(balance)operator(;)

class(SELECT) ident(users)operator(.)operator(*)operator(,) operator(()class(SELECT) ident(company_name) keyword(FROM) ident(companies) keyword(WHERE) ident(company_id) operator(=) ident(users)operator(.)ident(company_id)operator(\)) keyword(FROM) ident(users)operator(;)

