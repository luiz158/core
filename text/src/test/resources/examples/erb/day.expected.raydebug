inline<inline_delimiter(<%) ident(day)operator(,) ident(auftritte) operator(=) operator(*)ident(day) inline_delimiter(-%>)>
inline<inline_delimiter(<%)
	keyword(for) ident(auftritt) keyword(in) ident(auftritte) 
inline_delimiter(-%>)>

tag(<tr>)
	tag(<td) attribute_name(class)operator(=)string<delimiter(")content(pplan_datum)delimiter(")>tag(>)
		inline<inline_delimiter(<%=) ident(colorize) ident(day)operator(.)ident(to_s)operator(()symbol(:dots)operator(\)) keyword(if) ident(day) inline_delimiter(%>)>
		inline<inline_delimiter(<%) keyword(if) ident(day) keyword(and) ident(day)operator(.)ident(wday) operator(==) integer(6) inline_delimiter(%>)>tag(<br) tag(/>)tag(<em>)plain(Samstag)tag(</em>)inline<inline_delimiter(<%) keyword(end) inline_delimiter(%>)>
	tag(</td>)
	tag(<td) attribute_name(class)operator(=)string<delimiter(")content(pplan_zeit)delimiter(")>tag(>)
		inline<inline_delimiter(<%=) ident(colorize) ident(auftritt)operator(.)ident(time) inline_delimiter(%>)>
	tag(</td>)
	tag(<td) attribute_name(class)operator(=)string<delimiter(")content(pplan_stueck)delimiter(")>tag(>)
		inline<inline_delimiter(<%=) ident(colorize) ident(auftritt)operator(.)ident(program) inline_delimiter(%>)>
		inline<inline_delimiter(<%=) ident(link_to) string<delimiter(')content(E)delimiter(')>operator(,) symbol(:controller) operator(=)operator(>) string<delimiter(')content(admin/auftritte)delimiter(')>operator(,) symbol(:action) operator(=)operator(>) symbol(:edit)operator(,) symbol(:id) operator(=)operator(>) ident(auftritt) inline_delimiter(%>)>
	tag(</td>)
	tag(<td) attribute_name(class)operator(=)string<delimiter(")content(pplan_besetzung)delimiter(")>tag(>)
		inline<inline_delimiter(<%=) ident(colorize)operator(()ident(auftritt)operator(.)ident(place)operator(,) string<delimiter(')content(Ort: )delimiter(')>operator(\)) operator(+) string<delimiter(')content(<br />)delimiter(')> keyword(unless) ident(auftritt)operator(.)ident(place)operator(.)ident(blank?) inline_delimiter(%>)>
	tag(</td>)
tag(</tr>)

inline<inline_delimiter(<%)
	ident(day) operator(=) predefined_constant(nil)
	keyword(end) 
inline_delimiter(-%>)>
